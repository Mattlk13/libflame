###############################################################################
# Copyright (C) 2023, Advanced Micro Devices, Inc. All rights reserved.
###############################################################################
# 
# Script for netlib LAPACK test suite short summary.
# Refer to "libflame/netlib/libflame_netlib/TESTING/testing_results.txt" for detailed summary after 
# running the test-suite.
#

from __future__ import print_function
import re

FOLDER_NAME = 'libflame_netlib/' #netltest folder
TEST_FILE = FOLDER_NAME+'TESTING/testing_results.txt' #path to summary file generated by netlib-test suite
ENABLE_NETLIB_SUMMARY = 0 #Enable this for netlib short summary

# List of failure/error patterns
patterns = [
    r'(\w+)\s+drivers:\s+(\d+)\s+out of\s+(\d+)\s+tests failed to pass the threshold',
    r'(\w+):\s+(\d+)\s+out of\s+(\d+)\s+tests failed to pass the threshold',
    r'(\w+)\s+and (\w+)\s+compute an inconsistent result factor in\s+(\d+)\s+tests',
    r'Error in (\w+):\s+(\d+)\s+tests fail the threshold',
    r'\*\*\* (\w+)\s+routines failed the tests of the error exits \*\*\*',
    r'\*\*\* Error\(s\) or Failure\(s\) while testing (\w+)',
    #add patterns here if missing
]

failed_routines = {}  #routine names and corresponding failed tests
total_illegal_errors = 0 #total illegal value errors
total_info_errors = 0 #total info errors
total_failed_tests = 0 #total failed tests (excluding illegal values and exit errors)
encountered_error  = 0

try:
    with open(TEST_FILE, 'r') as file:
        lines = file.readlines()

    print("\nAOCL-LAPACK failed routines summary:\n")
    for line in lines:
        line = ' '.join(line.split())  # Replace multiple spaces with single space
        
        #check for info and other errors here
        if (line.find("illegal")!=-1) or (line.find("Illegal")!=-1):
            #print(line.strip()) #print error/failure lines
            total_illegal_errors += 1

        if (line.find(" INFO")!=-1):
            #print(line.strip()) #print error/failure lines
            total_info_errors += 1

        match_found = 0
        for pattern in patterns:
            match = re.match(pattern, line)
            if match and line.find("error exits") == -1: #exit errors are already catched above
                match_found = 1
                routine_name = match.group(1)
                failed_tests = match.group(2) if len(match.groups()) >= 2 and match.group(2).isdigit() else 0
                
                # Extract failed_tests
                tests_in_sentence = re.search(r'in\s+(\d+)\s+tests', line)
                if tests_in_sentence:
                    failed_tests = int(tests_in_sentence.group(1))
                    
                if routine_name in failed_routines:
                    failed_routines[routine_name] += max(int(failed_tests),1)
                else:
                    failed_routines[routine_name] = max(int(failed_tests),1)
                print(line.strip()) #print error/failure lines
                break
        
        #none of the patterns matched but there's a failure
        if match_found == 0 and line.find("out of")!=-1 and line.find("error exits")==-1 and line.find("Error(s)")==-1:
            total_failed_tests += 1

    print("*" * 80)
    print("Failed routines:")
    for routine, failed_tests in failed_routines.items():
        # if failed_tests > 0:
        #     print(f"* {routine}: {failed_tests} tests failed")
        #     total_failed_tests += failed_tests
        # else:
        print("{0} ".format(routine), end="")

    print("")
    print("*" * 80)
    print("Total illegal value errors: {0}", total_illegal_errors)
    print("Total exit tests failing: {0}", total_info_errors)
    print("*" * 80)
except:
    encountered_error = 1

#prints the netlib test summary (code snippet from lapack_testing.py - Netlib LAPACK 3.11)
try:
    nb_test_run=0
    nb_test_fail=0
    nb_test_illegal=0
    nb_test_info=0
    with open(TEST_FILE, 'r') as file:
        lines = file.readlines()
        for line in lines:
            words_in_line=line.split()
            try:
                if (line.find("run")!=-1):
                    whereisrun=words_in_line.index("run)")
                    nb_test_run+=int(words_in_line[whereisrun-2])
                if (line.find("out of")!=-1):
                    whereisout= words_in_line.index("out")
                    nb_test_fail+=int(words_in_line[whereisout-1])
                if ((line.find("illegal")!=-1) or (line.find("Illegal")!=-1)):
                    nb_test_illegal+=1
                if (line.find(" INFO")!=-1):
                    nb_test_info+=1
            except:
                continue
    
    if ENABLE_NETLIB_SUMMARY:
        print("Netlib short summary: ")
        print("")
        print("Total failed test: ",nb_test_fail)
        print("Total illegal value failed test: ",nb_test_illegal)
        print("Total exit errors: ",nb_test_info)
        print("*" * 80)
except:
    encountered_error = 1


#print the max failed tests from netlib and aocl-lapack summary
if encountered_error == 0:
    print("Total failed tests: ",max(nb_test_fail, total_failed_tests))
else:
    print("\n*** Encountered unexpected error while running the script! Check testing_results.txt ***\n")
